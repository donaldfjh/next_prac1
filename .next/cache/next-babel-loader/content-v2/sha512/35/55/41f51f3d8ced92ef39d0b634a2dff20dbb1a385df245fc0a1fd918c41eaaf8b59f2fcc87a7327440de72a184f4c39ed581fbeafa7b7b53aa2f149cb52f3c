{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/donaldf/Desktop/Next.js/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport { Fragment, useEffect, useState } from 'react';\nimport Layout from '../components/layout/Layout';\nimport MeetupList from '../components/meetups/MeetupList';\nimport Head from 'next/head';\n\nfunction HomePage(props) {\n  // const  [loadedMeetup,setLoadedMeetup] = useState([])\n  // useEffect(()=>{\n  //     //send a http request on fetch data \n  //     //set the setup that we fetch the meetup server as meetup for this component \n  //     setLoadedMeetup(DUMMY_MEETUP);\n  // },[])\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React MeetUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"High active React Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n} //never execute on the client side \n\n\n_c = HomePage;\n//this function will always on the server after deployment \n// export async function getServerSideProps(context){\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props:{\n//             meetsup:DUMMY_MEETUP\n//         },\n//     }\n// }\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/donaldf/Desktop/Next.js/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Fragment","useEffect","useState","Layout","MeetupList","Head","HomePage","props","meetups"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpB;AAEA;AACA;AACA;AACA;AAEA;AAEA,sBACA,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAIA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYH,C,CAED;;;KAxBSF,Q;AAgDT;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;;AACA,eAAeA,QAAf","sourcesContent":["import { Fragment, useEffect, useState } from 'react';\nimport Layout from '../components/layout/Layout';\nimport MeetupList from '../components/meetups/MeetupList'\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head'\n\nfunction HomePage(props){\n    // const  [loadedMeetup,setLoadedMeetup] = useState([])\n    \n    // useEffect(()=>{\n    //     //send a http request on fetch data \n    //     //set the setup that we fetch the meetup server as meetup for this component \n    //     setLoadedMeetup(DUMMY_MEETUP);\n\n    // },[])\n\n    return (\n    <Fragment>\n        <Head>\n            <title>React MeetUp</title>\n            {/* content here will show on the search engine  */}\n            <meta name='description' content='High active React Meetup'/>\n        </Head>\n        <MeetupList meetups = {props.meetups}/>\n    </Fragment>\n    )\n   \n   \n}\n\n//never execute on the client side \nexport async function getStaticProps(){\n    //Fetch data from data API\n    const client = await MongoClient.connect('mongodb+srv://user_0:ffang2198@cluster0.1hgvdjv.mongodb.net/?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetsupCollection = db.collection('meetups')\n\n    const meetups = await meetsupCollection.find().toArray()\n    client.close()\n\n    return {\n        props:{\n            meetups:meetups.map(meetup=>({\n                title:meetup.title,\n                address:meetup.address,\n                image:meetup.image,\n                id:meetup._id.toString()\n            }))\n        },\n        revalidate: 10\n    }\n}\n\n//this function will always on the server after deployment \n// export async function getServerSideProps(context){\n\n//     const req = context.req;\n//     const res = context.res;\n    \n\n//     return {\n//         props:{\n//             meetsup:DUMMY_MEETUP\n//         },\n\n//     }\n// }\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}